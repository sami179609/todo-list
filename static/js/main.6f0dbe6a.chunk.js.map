{"version":3,"sources":["UI Elements/Navbar.js","theme.js","UI Elements/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Box","sx","width","background","display","height","alignItems","boxShadow","marginLeft","Typography","variant","theme","createTheme","palette","typography","fontFamily","fontWeight","color","h1","fontSize","h2","h3","h4","h5","textDecoration","subtitle1","Transition","React","forwardRef","props","ref","Slide","direction","TodoList","useState","inputData","setInputData","items","setItems","open","setOpen","handleClickOpen","handleClose","deleteItem","id","updatedItems","filter","elem","ind","label","inputProps","style","marginTop","moment","fromNow","maxWidth","TextField","fullWidth","error","length","required","autoComplete","name","value","helperText","onChange","e","target","InputProps","InputLabelProps","borderColor","Button","size","onClick","done","borderRadius","item","map","justifyContent","Checkbox","event","tempItems","onCheck","marginRight","cursor","console","log","onUnCheck","defaultChecked","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","App","ThemeProvider","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f0dbe6a.chunk.js","sourcesContent":["import React from 'react'\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\n\n\n\n\nconst Navbar = () => {\n    return (\n        <>\n            <Box sx={{ width: '100%', background:'#252531',display:'flex',height:'60px',alignItems: 'center',boxShadow: '2px -15px 25px 7px'  }}>\n               <Box sx={{marginLeft:'19rem'}}> \n    <Typography variant=\"h2\"> Todo List Manager</Typography>\n    </Box>\n    </Box>\n        </>\n    )\n}\n\nexport default Navbar\n","import { createTheme } from '@mui/material/styles';\n\n\n\nconst theme = createTheme({\n  palette: {\n     \n  },\n\n  typography: {\n    fontFamily: 'sans-serif',\n    fontWeight:600,\n    color:'White',\n    h1:{\n      fontSize: '2rem',\n      fontWeight:700,\n      color:'White',\n    },\n    h2: {\n      fontSize: '1.5rem',\n      fontWeight:700,\n      color:'White',\n    },\n    h3:{\n      fontSize:'1.1rem',\n      fontWeight:400,\n      color:'White',\n\n    },\n    h4:{\n      fontSize: '1.1rem',\n      fontWeight:'bold',\n      color:'grey',\n  },\n  h5:{\n    fontSize: '1.1rem',\n    fontWeight:'bold',\n    color:'grey',\n    textDecoration:'line-through'\n},\n    subtitle1:{\n      fontSize: '0.9rem',\n      color:'grey',\n      fontWeight:500,\n\n\n    },\n  }\n  });\n\nexport default theme;","import React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport SubdirectoryArrowRightIcon from '@mui/icons-material/SubdirectoryArrowRight';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport moment from 'moment';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst TodoList = () => {\n  const [inputData, setInputData] = useState('');\n  const [items, setItems] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addItem = () => {\n    if (!inputData) {\n    } else {\n      setItems([...items, { name: inputData, done: 'false' }]);\n      setInputData('');\n    }\n  };\n  const deleteItem = (id) => {\n    const updatedItems = items.filter((elem, ind) => {\n      return ind !== id;\n    });\n    setItems(updatedItems);\n  };\n\n  const onCheck = (id, event) => {\n    let tempItems = [...items];\n    tempItems[id].done = 'true';\n    setItems(tempItems);\n  };\n  const onUnCheck = (id, event) => {\n    let tempItems = [...items];\n    tempItems[id].done = 'false';\n    setItems(tempItems);\n    console.log(items);\n  };\n\n  const label = { inputProps: { 'aria-label': 'Checkbox' } };\n\n  return (\n    <>\n      <Box>\n        <Typography variant=\"h1\">Intro to Remix</Typography>\n        <Box style={{ display: 'flex', marginTop: 15 }}>\n          <SubdirectoryArrowRightIcon\n            style={{ color: 'grey', fontSize: 18, marginLeft: 10 }}\n          />\n          <Typography variant=\"subtitle1\">\n            You created this list {moment().fromNow()}\n          </Typography>\n        </Box>\n        <Box\n          \n          style={{\n            width: '42rem',\n            maxWidth: '10',\n            display: 'flex',\n            marginTop: 20,\n          }}\n        >\n          <TextField\n            fullWidth\n            error={inputData.length ? false : true}\n            required\n            autoComplete=\"off\"\n            label=\"What needs to be done?\"\n            \n            id=\"outlined-required\"\n            name=\"input\"\n            value={inputData}\n            helperText={inputData.length ? '' :'Please write task name' }\n            onChange={(e) => setInputData(e.target.value)}\n            InputProps={{\n              style: {\n                color: 'grey',\n                fontWeight: 'bold',\n              },\n            }}\n            InputLabelProps={{\n              style: {\n                color: 'grey',\n                fontWeight: 'bold',\n                borderColor: 'white',\n              },\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            size=\"medium\"\n            onClick={addItem}\n            style={{\n              borderRadius: '8px',\n              background: '#6565E4',\n              fontWeight: 'bold',\n              marginLeft: 15,\n              height: '2.5rem',\n              marginTop:'0.6rem'\n            }}\n          >\n            Done\n          </Button>\n        </Box>\n      </Box>\n      <Box>\n        <Box style={{ marginTop: 60 }}>\n          <Typography variant=\"h3\">\n            Things to do (\n            {items.length\n              ? items?.filter((item) => item.done === 'false').length\n              : 0}\n            )\n          </Typography>\n\n          {items.map((elem, ind) => {\n            return (\n              elem.done === 'false' && (\n                <Box\n                  style={{\n                    background: '#252531',\n                    height: '3rem',\n                    width: '40rem',\n                    borderRadius: '8px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    marginTop: 10,\n                  }}\n                >\n                  <Box style={{ display: 'flex', alignItems: 'center' }}>\n                    <Checkbox\n                      onChange={() => {\n                        onCheck(ind);\n                      }}\n                      {...label}\n                      style={{ color: '#6565E4' }}\n                    />\n                    <Typography variant=\"h4\">{elem.name}</Typography>\n                  </Box>\n                  <span>\n                    <ContentCopyIcon\n                      onClick={() => {\n                        setItems([\n                          ...items,\n                          { name: elem.name, done: 'false' },\n                        ]);\n                      }}\n                      style={{\n                        color: 'grey',\n                        marginRight: 20,\n                        cursor: 'pointer',\n                      }}\n                    />\n                    <DeleteOutlineIcon\n                      onClick={() => {\n                        deleteItem(ind);\n                        handleClickOpen();\n                      }}\n                      style={{\n                        color: 'grey',\n                        marginRight: 20,\n                        cursor: 'pointer',\n                      }}\n                    />\n                  </span>\n                </Box>\n              )\n            );\n          })}\n        </Box>\n\n        <Box style={{ marginTop: 60 }}>\n          <Typography variant=\"h3\">\n            Things done (\n            {items.length\n              ? items?.filter((item) => item.done === 'true').length\n              : 0}\n            )\n          </Typography>\n          {items.map((elem, ind) => {\n            return (\n              elem.done === 'true' && (\n                <Box\n                  style={{\n                    marginTop: 10,\n                    background: '#252531',\n                    height: '3rem',\n                    width: '40rem',\n                    borderRadius: '8px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <Box style={{ display: 'flex', alignItems: 'center' }}>\n                    <Checkbox\n                      {...label}\n                      onChange={(e) => {\n                        onUnCheck(ind);\n                      }}\n                      defaultChecked\n                      style={{ color: '#6565E4' }}\n                    />\n                    <Typography variant=\"h5\">{elem.name}</Typography>\n                  </Box>\n                  <span>\n                    <ContentCopyIcon\n                      onClick={() => {\n                        setItems([...items, { name: elem.name, done: 'true' }]);\n                      }}\n                      style={{\n                        color: 'grey',\n                        marginRight: 20,\n                        cursor: 'pointer',\n                      }}\n                    />\n                    <DeleteOutlineIcon\n                      onClick={() => {\n                        deleteItem(ind);\n                        handleClickOpen();\n                      }}\n                      style={{\n                        color: 'grey',\n                        marginRight: 20,\n                        cursor: 'pointer',\n                      }}\n                    />\n                  </span>\n                </Box>\n              )\n            );\n          })}\n        </Box>\n        <Box>\n          <Dialog\n            open={open}\n            TransitionComponent={Transition}\n            keepMounted\n            onClose={handleClose}\n            aria-describedby=\"alert-dialog-slide-description\"\n          >\n            <DialogTitle>{'Confirmation Message'}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-slide-description\">\n                Do you really want to delete this task?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={ handleClose}>Yes</Button>\n              \n            </DialogActions>\n          </Dialog>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport Navbar from './UI Elements/Navbar'\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme' \nimport Box from '@mui/material/Box';\nimport TodoList from './UI Elements/TodoList';\n\n\nfunction App() {\n\n  \n  return (\n    <ThemeProvider theme={theme}>\n  \n    <>\n    \n   <Navbar />\n   <Box style={{padding: '4rem 19rem 4rem 19rem'}} >\n   <TodoList />\n</Box>\n\n \n    </>\n    \n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}